name: Add issue to project
on:
  issues:
    types:
      - opened
jobs:
  add-to-project:
    name: Add issue to project
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@36464acb844fc53b9b8b2401da68844f6b05ebb0
        with:
          app_id: ${{ secrets.PROJECT_PLANNING_APP_ID }}
          private_key: ${{ secrets.PROJECT_PLANNING_APP_PEM }}
      - name: Get project data
        id: get_project_data
        uses: actions/github-script@v6
        with:
          github-token: ${{ steps.generate_token.outputs.token }}
          script: |
            const query = `query($org: String!, $project_number: Int!) {
              organization(login: $org){
                projectV2(number: $project_number) {
                  id
                  fields(first:20) {
                    nodes {
                      ... on ProjectV2Field {
                        id
                        name
                      }
                      ... on ProjectV2SingleSelectField {
                        id
                        name
                        options {
                          id
                          name
                        }
                      }
                    }
                  }
                }
              }
            }`;

            const variables = {
              org: context.repo.owner,
              project_number: 10
            }

            const result = await github.graphql(query, variables)

            return result
      - name: Add issue to project
        uses: actions/github-script@v6
        with:
          github-token: ${{ steps.generate_token.outputs.token }}
          script: |
            const projectData = ${{ steps.get_project_data.outputs.result }}

            const mutation = `mutation($project:ID!, $issue:ID!) {
              addProjectV2ItemById(input: {projectId: $project, contentId: $issue}) {
                item {
                  id
                }
              }
            }`;

            const variables = {
              issue: context.payload.issue.node_id,
              project: projectData.organization.projectV2.id
            }

            const itemId = await github.graphql(mutation, variables)
            console.log(itemId)
