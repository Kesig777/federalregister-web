class @FR2.HoneybadgerConfigurer
  constructor: () ->

    Honeybadger.configure({
      apiKey:      @._environmentApiKey(),
      environment: @._environment(),
      enableUncaught: <%= Settings.app.honeybadger_js.enableUncaught %>
    })

    <% unless Settings.app.honeybadger_js.enableUncaught %>
    Honeybadger.beforeNotify(@._ignore_everything)
    Honeybadger.beforeNotify(@._ignore_foreign_errors)
    Honeybadger.beforeNotify(@._add_some_context)
    Honeybadger.beforeNotify(@._ignore_bots)
    <% end %>

    FR2.CommentSubmissionHoneybadger = Honeybadger.factory({
      apiKey:      @._environmentCommentSubmissionApiKey(),
      environment: @._environment(),
    })

  _environmentApiKey: ->
    $('body').data('honeybadger-js-api-key')

  _environmentCommentSubmissionApiKey: ->
    $('body').data('honeybadger-js-comment-submission-api-key')

  _environment: ->
    $('body').data('environment')

  _ignore_everything: (notice) ->
    if Object.keys(notice.context).length == 0
      console.log("Not notifying HB notice.message: " + notice.message)
      return false
    else
      return true

  _ignore_foreign_errors: (notice) ->
    if /^404/.test(notice.message) && '<%= Settings.services.fr.web.base_url %>' != window.location.origin
      return false
    return true

  _add_some_context: (notice) ->
    notice.cookies = document.cookie

  _ignore_bots: (notice) ->
    if /bot/i.test(navigator.userAgent) || /PhantomJS/i.test(navigator.userAgent)
      return false
    return true
