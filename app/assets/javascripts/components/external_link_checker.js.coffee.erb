class @FR2.ExternalLinkChecker
  @WHITELISTED_DOMAINS = <%= raw Settings.external_modal_domain_whitelist %>

  constructor: (@event)->
    @el = $(@event.target)
    @url = @el.attr('href')

    if @showModal() && !@isInternalDomain() && @isExternalUrl()
      @event.preventDefault()
      @displayModal()

  displayModal: ->
    modalBody = Handlebars.compile($('#external-link-warning-modal-template').html())({
      url: @url
    })

    FR2.Modal.displayModal(
      'You Are Now Leaving the Federal Register',
      modalBody,
      {modalClass: 'fr-modal external-link-warning-modal'}
    )

    @addModalEvents()

  addModalEvents: ->
    $('#fr_modal.external-link-warning-modal form').on 'submit', (e)=>
      e.preventDefault()

      if $('#fr_modal.external-link-warning-modal [name=accept').prop('checked')
        amplify.store('showExternalModal', false, expires: 2592000000)

      window.location.href = @url

  showModal: ->
    amplify.store('showExternalModal') != false

  isExternalUrl: ->
    relativeUrlRegex = RegExp('^(https?:)//')

    if relativeUrlRegex.test(@url)
      true

  isInternalDomain: ->
    isInternal = false
    $.each @constructor.WHITELISTED_DOMAINS, (i, internalDomain) =>
      if RegExp("^https?://#{internalDomain}").test(@url)
        isInternal = true

    isInternal
