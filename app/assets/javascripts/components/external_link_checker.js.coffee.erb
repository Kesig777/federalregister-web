class @FR2.ExternalLinkChecker
  @ALLOWED_DOMAINS = <%= Settings.app.external_modal_domain_allow_list %>

  constructor: (@event)->
    @el = $(@event.target)
    @url = @el.attr('href')

    if @isExternalUrl() && !@isOwnDomain() && @showModal() && !@isAllowedDomain()
      @event.preventDefault()
      @displayModal()

  displayModal: ->
    modalBody = HandlebarsTemplates['external_link_warning_modal']({
      url: @url
    })

    FR2.Modal.displayModal(
      'You Are Now Leaving the Federal Register',
      modalBody,
      {modalClass: 'fr-modal external-link-warning-modal'}
    )

    @addModalEvents()

  addModalEvents: ->
    $('#fr_modal.external-link-warning-modal form').on 'submit', (e)=>
      e.preventDefault()

      if $('#fr_modal.external-link-warning-modal input[name=accept]').prop('checked')
        FR2.UserPreferenceStore.saveExternalUrlModalSetting(
          {optOut: true}
        )

      if (@el.attr('target') == "_blank") || (@el.attr('target') == "blank")
        FR2.Modal.closeModal('#fr_modal')
        window.open(@url, '_blank', 'noopener,noreferrer')
        window.opener = null
      else
        window.location.href = @url

  showModal: ->
    FR2.UserPreferenceStore.getExternalUrlModalSetting('optOut') != true

  isOwnDomain: ->
    RegExp("^#{window.location.origin}").test(@url)

  isExternalUrl: ->
    RegExp('^(https?:)//').test(@url)

  isAllowedDomain: ->
    @constructor.ALLOWED_DOMAINS.some((domain)=>
      RegExp("^https?://#{domain}").test(@url)
    )
