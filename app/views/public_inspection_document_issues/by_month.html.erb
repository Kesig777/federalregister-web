<%= calendar(
    :year => @date.year,
    :month => @date.month,
    # ugly hack to punch in data attributes
    table_class: "calendar #{@table_class}\" data-calendar-year=\"#{@date.year}\" data-calendar-month=\"#{@date.month}\" data-year-start=\"1994\" data-year-end=\"#{Time.now.year}\"",
    previous_month_text: link_to(
      '&laquo; Prev'.html_safe,
      public_inspection_issues_by_month_path(
        @date.months_ago(1).year,
        @date.months_ago(1).month
      ),
      class: "nav"
    ),
    next_month_text: @date.months_since(1) <= PublicInspectionDocumentIssue.current.publication_date ?
      link_to(
        'Next &raquo;'.html_safe,
        public_inspection_issues_by_month_path(
          @date.months_since(1).year,
          @date.months_since(1).month
        ),
        :class => 'nav'
      )
      : "",
    abbrev: (0..0),
    month_name_class: "monthName year_#{@date.year}",
  ) do |d|
    if d.wday == 0 || d.wday == 6
      [d.mday, {:class => "weekend"}]
    # elsif d == Time.current.to_date && Issue.current_issue_is_late?
    #   [d.mday, {:class => "late" }]
    elsif d == PublicInspectionDocumentIssue.current.publication_date
      [link_to(d.mday, public_inspection_issue_path(d)), {class: "current"}]
    elsif @public_inspection_dates.include?(d)
      [link_to(d.mday, public_inspection_issue_path(d)), {class: "published"}]
    # elsif holiday = Holiday.find_by_date(d)
    #   [d.mday, {:class => "holiday", :title => holiday.name}]
    else
      [d.mday, {class: "published"}]
    end
  end
%>
